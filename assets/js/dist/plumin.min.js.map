{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/opentype.js/dist/opentype.js","node_modules/paper/dist/paper-core.js","src/Collection.js","src/Font.js","src/Glyph.js","src/Node.js","src/Path.js","src/plumin.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","plumin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","prototype","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","indexOf","GlyphNames","post","version","names","slice","Array","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","Object","keys","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","push","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","index","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","undefined","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","replace","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","type","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","apply","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","tag","offset","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","arguments","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","value","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","isArray","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","key","values","hasOwnProperty","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","forEach","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","isPlainObject","test","part","each","getLength","props","exclude","statics","ctor","initialize","clone","constructor","pick","toString","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","add","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","node","curveLength","getTangentAt","getWinding","result","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","anchors","parentAnchors","addComponent","addComponents","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","Node"],"mappings":"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F,QAAAo9B,KACA,GAAA9mB,UAAAvV,SAAA,GAAAq8B,cAAA4vD,YAAA,CACA,MAAA5vD,KAGA,GAAA16B,GAAA6B,OAAAwF,OAAAijF,WAAAxqF,UACAwqF,YAAApgF,MAAAlK,EAAA4T,UACA,OAAA5T,GAGA1C,OAAAiB,SAAAA,QAEAjB,QAAA4tF,MAAAZ,WAAAY,MAAAv1D,KAAAr4B,OACAA,QAAA4tF,MAAAh2D,MAEAplnxlPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});","/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","function Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphs = [];\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.glyphs.push( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.glyphs;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.glyphs.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Glyph( args ) {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\t//this.contours = ( args && args.contours ) || [];\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.components = ( args && args.components ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// default fill color needed to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// but each individual glyph must be explicitely made visible\n\tthis.visible = false;\n}\n\nGlyph.prototype = Object.create(paper.CompoundPath.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy *Child/*Children methods to *Contour/*Contours\n// This has the added benefit of preventing CompoundPath#insertChildren\n// from arbitrarily changing the direction of paths\nObject.getOwnPropertyNames( paper.Item.prototype )\n\t.forEach(function(name) {\n\t\t// exclude getters and non-methods\n\t\tif ( Object.getOwnPropertyDescriptor(this, name).get ||\n\t\t\t\ttypeof this[name] !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( name.indexOf('Children') !== -1 ) {\n\t\t\tthis[name.replace('Children', 'Contours')] = this[name];\n\n\t\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\t\tthis[name.replace('Child', 'Contour')] = this[name];\n\t\t}\n\n\t}, paper.Item.prototype);\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nGlyph.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\n// proxy .children to .contours\nObject.defineProperty(\n\tGlyph.prototype,\n\t'contours',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\nGlyph.prototype.addComponent = function( item ) {\n\tthis.components.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addComponents = function( components ) {\n\treturn components.forEach(function(component) {\n\t\tthis.addComponent(component);\n\t}, this);\n};\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !glyph0.contours[i] || !glyph1.contours[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.contours[i].interpolate(\n\t\t\tglyph0.contours[i],\n\t\t\tglyph1.contours[i],\n\t\t\tcoef\n\t\t);\n\n\t\t/* eslint-disable no-loop-func */\n\t\tthis.components.forEach(function(component, j) {\n\t\t\tcomponent.interpolate(\n\t\t\t\tglyph0.components[j], glyph1.components[j], coef\n\t\t\t);\n\t\t});\n\t\t/* eslint-enable no-loop-func */\n\n\t\tthis.ot.advanceWidth =\n\t\t\tglyph0.ot.advanceWidth +\n\t\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\t\tthis.ot.leftSideBearing =\n\t\t\tglyph0.ot.leftSideBearing +\n\t\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\t\tthis.ot.xMax =\n\t\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\t\tthis.ot.xMin =\n\t\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\t\tthis.ot.yMax =\n\t\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\t\tthis.ot.yMin =\n\t\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\t}\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n","var paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n","/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( this.curves[0].point1.x ) || 0,\n\t\tMath.round( this.curves[0].point1.y ) || 0\n\t);\n\n\tthis.curves.forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tpushBezier(\n\t\t\t\t'C',\n\t\t\t\tMath.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\tMath.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\t\t}\n\t});\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n"]}